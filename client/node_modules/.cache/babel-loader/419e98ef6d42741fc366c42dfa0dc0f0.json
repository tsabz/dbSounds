{"ast":null,"code":"var _jsxFileName = \"/Users/teesabz/Desktop/clone_dbSounds/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Midi from './components/Midi.js';\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\nimport { EventEmitter } from 'events';\n\nclass Edit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n\n    this.toggleShow = () => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.render = () => {\n      const {\n        p,\n        updateProducer,\n        updateName,\n        updateGenre,\n        updateNotes,\n        updateLocation,\n        deleteProducer\n      } = this.props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editClass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, this.state.show ? /*#__PURE__*/React.createElement(\"form\", {\n        id: p.id,\n        onSubmit: updateProducer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: updateName,\n        type: \"text\",\n        placeholder: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: updateGenre,\n        type: \"text\",\n        placeholder: \"Genre\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: updateNotes,\n        type: \"text\",\n        placeholder: \"notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: updateLocation,\n        type: \"text\",\n        placeholder: \"location\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        value: p.id,\n        onClick: deleteProducer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, \"DELETE\")) : ''));\n    };\n  }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.toggleShow = () => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.newProducerName = event => {\n      this.setState({\n        newName: event.target.value\n      });\n    };\n\n    this.newProducerGenre = event => {\n      this.setState({\n        newGenre: event.target.value\n      });\n    };\n\n    this.newProducerNotes = event => {\n      this.setState({\n        newNotes: event.target.value\n      });\n    };\n\n    this.newProducerLocation = event => {\n      this.setState({\n        newLocation: event.target.value\n      });\n    };\n\n    this.createProducers = () => {\n      // event.preventDefault();\n      axios.post( // 'http://localhost:3000/dbsounds',\n      '/dbsounds', {\n        producer_name: this.state.newName,\n        producer_genre: this.state.newGenre,\n        producer_notes: this.state.newNotes,\n        producer_location: this.state.newLocation\n      }).then(response => {\n        this.setState({\n          producers: response.data\n        });\n      });\n    };\n\n    this.loadProducers = () => {\n      axios.get('/dbsounds').then(response => {\n        this.setState({\n          producers: response.data\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.loadProducers();\n    };\n\n    this.changeName = event => {\n      this.setState({\n        updateName: event.target.value\n      });\n    };\n\n    this.changeGenre = event => {\n      this.setState({\n        updateGenre: event.target.value\n      });\n    };\n\n    this.changeNotes = event => {\n      this.setState({\n        updateNotes: event.target.value\n      });\n    };\n\n    this.changeLocation = event => {\n      this.setState({\n        updateLocation: event.target.value\n      });\n    };\n\n    this.updateProducer = event => {\n      event.preventDefault();\n      const id = event.target.getAttribute('id');\n      axios.put('/dbsounds', {\n        id: id,\n        producer_name: this.state.changeName,\n        producer_genre: this.state.changeGenre,\n        producer_notes: this.state.changeNotes,\n        producer_location: this.state.changeLocation\n      }).then(response => {\n        this.setState({\n          producers: response.data\n        });\n      });\n    };\n\n    this.deleteProducer = event => {\n      event.preventDefault();\n      axios.delete('/dbsounds' + event.target.value).then(response => {\n        this.loadProducers();\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }\n      }, \"dbSounds\"), /*#__PURE__*/React.createElement(Midi, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"infobutton\",\n        onClick: this.toggleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }\n      }, \"Insert Info Here\"), this.state.show ? /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.createProducers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.newProducerName,\n        type: \"text\",\n        placeholder: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.newProducerGenre,\n        type: \"text\",\n        placeholder: \"Genre\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.newProducerNotes,\n        type: \"text\",\n        placeholder: \"Notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.newProducerLocation,\n        type: \"text\",\n        placeholder: \"Location\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"submit\",\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      })) : '', /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, this.state.producers.map(p => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 23\n          }\n        }, \"Name: \", p.producer_name), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 23\n          }\n        }, \"Genre: \", p.producer_genre), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 23\n          }\n        }, \"Notes: \", p.producer_notes), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 23\n          }\n        }, \"Location: \", p.producer_location), /*#__PURE__*/React.createElement(Edit, {\n          updateProducer: this.updateProducer,\n          changeName: this.changeName,\n          changeGenre: this.changeGenre,\n          changeNotes: this.changeNotes,\n          changeLocation: this.changeLocation,\n          deleteProducer: this.deleteProducer,\n          p: p,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 23\n          }\n        }));\n      }))));\n    };\n\n    this.state = {\n      producers: [],\n      show: false\n    };\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/teesabz/Desktop/clone_dbSounds/client/src/App.js"],"names":["React","Component","Midi","render","axios","EventEmitter","Edit","state","show","toggleShow","setState","p","updateProducer","updateName","updateGenre","updateNotes","updateLocation","deleteProducer","props","id","App","constructor","newProducerName","event","newName","target","value","newProducerGenre","newGenre","newProducerNotes","newNotes","newProducerLocation","newLocation","createProducers","post","producer_name","producer_genre","producer_notes","producer_location","then","response","producers","data","loadProducers","get","componentDidMount","changeName","changeGenre","changeNotes","changeLocation","preventDefault","getAttribute","put","delete","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Midi from './components/Midi.js';\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\nimport { EventEmitter } from 'events';\n\n\n\nclass Edit extends React.Component {\n  state = {\n    show: false\n  }\n\n  toggleShow = () => {\n    this.setState({\n        show: !this.state.show\n    })\n  }\n\n\n  render = () => {\n    const { p, updateProducer, updateName, updateGenre, updateNotes, updateLocation, deleteProducer} = this.props\n\n    return (\n      <div className = \"editClass\">\n        <button onClick={this.toggleShow}>Edit</button>\n        <div className = \"editForm\">\n          {this.state.show ? (\n              <form id={p.id} onSubmit={updateProducer}>\n                  <input onChange={updateName} type=\"text\" placeholder=\"name\"/>\n                  <input onChange={updateGenre} type=\"text\" placeholder=\"Genre\"/>\n                  <input onChange={updateNotes} type=\"text\" placeholder=\"notes\"/>\n                  <input onChange={updateLocation} type=\"text\" placeholder=\"location\"/>\n                  <input type=\"submit\" value=\"Update Name\"/>\n                  <button value={p.id} onClick={deleteProducer}>DELETE</button>\n              </form>\n              ) : (\n                ''\n              )}\n        </div>\n      </div>\n    )\n\n  }\n\n}\n\nclass App extends Component {\n  constructor(){ \n    super()\n    this.state = {\n      producers: [],\n      show: false\n   }\n  }\n\n  toggleShow = () => {\n    this.setState({\n        show: !this.state.show\n    })\n  }\n\n\n  newProducerName = (event) => {\n    this.setState({\n      newName: event.target.value,\n    })\n  }\n\n  newProducerGenre = (event) => {\n    this.setState({\n      newGenre: event.target.value,\n    })\n  }\n\n  newProducerNotes = (event) => {\n    this.setState({\n      newNotes: event.target.value,\n    })\n  }\n\n  newProducerLocation = (event) => {\n    this.setState({\n      newLocation: event.target.value,\n    })\n  }\n\n\n\n  createProducers = () => { \n    // event.preventDefault();\n    axios.post(\n      // 'http://localhost:3000/dbsounds',\n      '/dbsounds',\n      {\n        producer_name: this.state.newName,\n        producer_genre: this.state.newGenre,\n        producer_notes: this.state.newNotes,\n        producer_location: this.state.newLocation\n      }\n      ).then(\n      (response) => {\n          this.setState({\n            producers: response.data\n          })\n      } \n  )\n}\n\nloadProducers = () => { \naxios.get('/dbsounds').then(\n  (response) => {\n    this.setState({\n      producers: response.data\n    })\n  }\n)\n}\n\n  componentDidMount = () => {\n    this.loadProducers()\n  }\n\n  changeName = (event) => {\n    this.setState({\n      updateName: event.target.value,\n    })\n  }\n\n  changeGenre = (event) => {\n    this.setState({\n      updateGenre: event.target.value,\n    })\n  }\n\n  changeNotes = (event) => {\n    this.setState({\n      updateNotes: event.target.value,\n    })\n  }\n\n  changeLocation = (event) => {\n    this.setState({\n      updateLocation: event.target.value,\n    })\n  }\n\n  updateProducer = (event) => {\n    event.preventDefault();\n    const id = event.target.getAttribute('id');\n    axios.put(\n      '/dbsounds',\n      {\n        id: id,\n        producer_name: this.state.changeName,\n        producer_genre: this.state.changeGenre,\n        producer_notes: this.state.changeNotes,\n        producer_location: this.state.changeLocation\n      }\n    ).then((response) => {\n      this.setState(\n      {\n        producers: response.data\n      }\n      )\n    })\n  }\n\n\n  deleteProducer = (event) => {\n    event.preventDefault();\n    axios.delete('/dbsounds' + event.target.value).then(\n        (response) => {\n          this.loadProducers()\n        }\n      )\n    }  \n\n\n  render = () => {\n    return ( \n    <div className=\"container\">\n      <h1 className=\"header\">dbSounds</h1>\n      <Midi />\n      <div>\n      </div>\n      <button className=\"infobutton\" onClick={this.toggleShow}>Insert Info Here</button>\n      {this.state.show ? (\n      <form onSubmit={this.createProducers}>\n        <input onChange={this.newProducerName} type=\"text\" placeholder=\"Name\"/>\n        <input onChange={this.newProducerGenre} type=\"text\" placeholder=\"Genre\"/>          \n        <input onChange={this.newProducerNotes} type=\"text\" placeholder=\"Notes\"/>\n        <input onChange={this.newProducerLocation} type=\"text\" placeholder=\"Location\"/>\n          <input className=\"submit\" type=\"submit\" value=\"Submit\"/>\n      </form>\n                    ) : (\n                      ''\n                    )}\n        <div className=\"main\">\n          <ul>\n            {\n              this.state.producers.map(\n                (p) => {\n                  return (\n                    <li>\n                      <h4>Name: {p.producer_name}</h4>\n                      <h4>Genre: {p.producer_genre}</h4>\n                      <h4>Notes: {p.producer_notes}</h4>\n                      <h4>Location: {p.producer_location}</h4>\n                      <Edit \n                        updateProducer={this.updateProducer}\n                        changeName={this.changeName}\n                        changeGenre={this.changeGenre}\n                        changeNotes={this.changeNotes}\n                        changeLocation={this.changeLocation}\n                        deleteProducer={this.deleteProducer}\n                        p={p}/>\n                    </li>\n                  )\n                }\n              )\n            }\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}