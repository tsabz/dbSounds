{"version":3,"sources":["components/sounds/baseloop.wav","components/Midi.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Midi","map","useSound","baseloop","sprite","kick","hihat","snare","cowbell","play","1","id","2","3","4","React","useEffect","handlePress","ev","handler","key","window","addEventListener","removeEventListener","className","arian-label","onMouseDown","Edit","state","show","toggleShow","setState","render","props","p","updateProducer","updateName","updateGenre","updateNotes","updateLocation","deleteProducer","onClick","onSubmit","onChange","type","placeholder","value","Component","App","newProducerName","event","newName","target","newProducerGenre","newGenre","newProducerNotes","newNotes","newProducerLocation","newLocation","createProducers","axios","post","producer_name","producer_genre","producer_notes","producer_location","then","response","producers","data","loadProducers","get","componentDidMount","changeName","changeGenre","changeNotes","changeLocation","preventDefault","getAttribute","put","delete","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.783438d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseloop.7515c409.wav\";","import React from 'react';\nimport useSound from 'use-sound';\nimport baseloop from './sounds/baseloop.wav';\n// import disco from './sounds/disco.mp3';Å¾\n\nconst useKeyboardBindings = map => {\n    React.useEffect(() => {\n      const handlePress = ev => {\n        const handler = map[ev.key];\n  \n        if (typeof handler === 'function') {\n          handler();\n        }\n      };\n  \n      window.addEventListener('keydown', handlePress);\n  \n      return () => {\n        window.removeEventListener('keydown', handlePress);\n      };\n    }, [map]);\n  };\n\nconst Midi = () => { \n    const [play] = useSound(baseloop, {\n        sprite: {\n            kick: [0, 1800],\n            hihat: [1800, 2100],\n            snare: [1200, 1800],\n            cowbell: [968, 200],\n          },\n    });\n\n    useKeyboardBindings({\n        1: () => play({ id: 'kick' }),\n        2: () => play({ id: 'hihat' }),\n        3: () => play({ id: 'snare' }),\n        4: () => play({ id: 'cowbell' }),\n      });\n\n    // useKeyboardBindings({\n    //     1: () => play({})\n    // })\n\n        \n        return (\n            <div className=\"midicontainer\">\n                <div className=\"buttonrow\">\n                    <>\n                    <button arian-label=\"kick\" onMouseDown={() => play({id: 'kick'})} className=\"square\">1</button>\n                    \n                    <button arian-label=\"hihat\" onMouseDown={() => play({id: 'hihat'})} className=\"square\">2</button>\n                    <button className=\"square\">3</button>\n                    \n                    <button arian-label=\"snare\" onMouseDown={() => play({id: 'snare'})} className=\"square\">4</button>\n                    <button arian-label=\"cowbell\" onMouseDown={() => play({id: 'cowbell'})} className=\"square\">5</button>\n                    </>\n                    <button className=\"square\">6</button>\n                    <button className=\"square\">7</button>\n                    <button className=\"square\">8</button>\n                </div>\n                <div className=\"buttonrow\">\n                    <button className=\"square\">a</button>\n                    <button className=\"square\">s</button>\n                    <button className=\"square\">d</button>\n                    <button className=\"square\">f</button>\n                    <button className=\"square\">g</button>\n                    <button className=\"square\">h</button>\n                    <button className=\"square\">j</button>\n                    <button className=\"square\">k</button>\n                </div>\n                <div className=\"buttonrow\">\n                    <button className=\"square\">31</button>\n                    <button className=\"square\">32</button>\n                    <button className=\"square\">33</button>\n                    <button className=\"square\">34</button>\n                    <button className=\"square\">35</button>\n                    <button className=\"square\">36</button>\n                    <button className=\"square\">37</button>\n                    <button className=\"square\">38</button>\n                </div>\n            </div>\n        )\n}\n\n\n\nexport default Midi","import React, { Component } from 'react';\nimport Midi from './components/Midi.js';\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\nimport { EventEmitter } from 'events';\n\n\n\nclass Edit extends React.Component {\n  state = {\n    show: false\n  }\n\n  toggleShow = () => {\n    this.setState({\n        show: !this.state.show\n    })\n  }\n\n\n  render = () => {\n    const { p, updateProducer, updateName, updateGenre, updateNotes, updateLocation, deleteProducer} = this.props\n\n    return (\n      <div className = \"editClass\">\n        <button onClick={this.toggleShow}>Edit</button>\n        <div className = \"editForm\">\n          {this.state.show ? (\n              <form id={p.id} onSubmit={updateProducer}>\n                  <input onChange={updateName} type=\"text\" placeholder=\"name\"/>\n                  <input onChange={updateGenre} type=\"text\" placeholder=\"Genre\"/>\n                  <input onChange={updateNotes} type=\"text\" placeholder=\"notes\"/>\n                  <input onChange={updateLocation} type=\"text\" placeholder=\"location\"/>\n                  <input type=\"submit\" value=\"Update Name\"/>\n                  <button value={p.id} onClick={deleteProducer}>DELETE</button>\n              </form>\n              ) : (\n                ''\n              )}\n        </div>\n      </div>\n    )\n\n  }\n\n}\n\nclass App extends Component {\n  constructor(){ \n    super()\n    this.state = {\n      producers: []\n   }\n  }\n  newProducerName = (event) => {\n    this.setState({\n      newName: event.target.value,\n    })\n  }\n\n  newProducerGenre = (event) => {\n    this.setState({\n      newGenre: event.target.value,\n    })\n  }\n\n  newProducerNotes = (event) => {\n    this.setState({\n      newNotes: event.target.value,\n    })\n  }\n\n  newProducerLocation = (event) => {\n    this.setState({\n      newLocation: event.target.value,\n    })\n  }\n\n\n\n  createProducers = () => { \n    // event.preventDefault();\n    axios.post(\n      'http://localhost:3000/dbsounds',\n      {\n        producer_name: this.state.newName,\n        producer_genre: this.state.newGenre,\n        producer_notes: this.state.newNotes,\n        producer_location: this.state.newLocation\n      }\n      ).then(\n      (response) => {\n          this.setState({\n            producers: response.data\n          })\n      } \n  )\n}\n\nloadProducers = () => { \naxios.get('http://localhost:3000/dbsounds').then(\n  (response) => {\n    this.setState({\n      producers: response.data\n    })\n  }\n)\n}\n\n  componentDidMount = () => {\n    this.loadProducers()\n  }\n\n  changeName = (event) => {\n    this.setState({\n      updateName: event.target.value,\n    })\n  }\n\n  changeGenre = (event) => {\n    this.setState({\n      updateGenre: event.target.value,\n    })\n  }\n\n  changeNotes = (event) => {\n    this.setState({\n      updateNotes: event.target.value,\n    })\n  }\n\n  changeLocation = (event) => {\n    this.setState({\n      updateLocation: event.target.value,\n    })\n  }\n\n  updateProducer = (event) => {\n    event.preventDefault();\n    const id = event.target.getAttribute('id');\n    axios.put(\n      'http://localhost:3000/dbsounds',\n      {\n        id: id,\n        producer_name: this.state.changeName,\n        producer_genre: this.state.changeGenre,\n        producer_notes: this.state.changeNotes,\n        producer_location: this.state.changeLocation\n      }\n    ).then((response) => {\n      this.setState(\n      {\n        producers: response.data\n      }\n      )\n    })\n  }\n\n\n  deleteProducer = (event) => {\n    event.preventDefault();\n    axios.delete('http://localhost:3000/dbsounds/' + event.target.value).then(\n        (response) => {\n          this.loadProducers()\n        }\n      )\n    }  \n\n\n  render = () => {\n    return ( \n    <div className=\"container\">\n      <h1 className=\"header\">dbSounds</h1>\n      <Midi />\n      <div>\n      </div>\n      <h2>INSERT INFO HERE</h2>\n      <form onSubmit={this.createProducers}>\n        <input onChange={this.newProducerName} type=\"text\" placeholder=\"Name\"/>\n        <input onChange={this.newProducerGenre} type=\"text\" placeholder=\"Genre\"/>          \n        <input onChange={this.newProducerNotes} type=\"text\" placeholder=\"Notes\"/>\n        <input onChange={this.newProducerLocation} type=\"text\" placeholder=\"Location\"/>\n          <input type=\"submit\" value=\"Submit\"/>\n      </form>\n        <div className=\"main\">\n          <ul>\n            {\n              this.state.producers.map(\n                (p) => {\n                  return (\n                    <li>\n                      <h4>Name: {p.producer_name}</h4>\n                      <h4>Genre: {p.producer_genre}</h4>\n                      <h4>Notes: {p.producer_notes}</h4>\n                      <h4>Location: {p.producer_location}</h4>\n                      <Edit \n                        updateProducer={this.updateProducer}\n                        changeName={this.changeName}\n                        changeGenre={this.changeGenre}\n                        changeNotes={this.changeNotes}\n                        changeLocation={this.changeLocation}\n                        deleteProducer={this.deleteProducer}\n                        p={p}/>\n                    </li>\n                  )\n                }\n              )\n            }\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}